Команды и описания (если перед командой '~', значит она не реализована):

reg name ...                    : регистрация переменной (int)
arr name var/int ...            : регистрирует область памяти для массива определенного размера
stv name                        : статическая переменная, которая не удаляется при выходе из блока кода
ptr name var ...                : регистрация указателя на переменную
tmp name ...                    : быстрая(по реализации) переменная, которая при запуске сразу выполняет 
                                  поп, результат записывается в нее

mov svar gvar/gint ...           : установка значения в переменную
set var varind/int              : установка значения на индексе в массиве на значение
get var varind/int              : пуш конкретного элемента из массива
sget svar                       : пуш статического элемента 
sset svar var/int ...           : установка статической переменной
pget name                       : пуш значения переменной за указателем
pset name  ...                  : переопределение переменной за указателем
paddr name                      : пуш последнего адреса за указателем

addr                            : пуш адреса стека
dref int/addr                   : пуш значения по адресу 

lpp                             : переход в начало блока кода
jmp name                        : переход в ключ. точку
jbp name                        : переход в ключ. точку если попстек переменная равна 1/true
jnb name                        : переход в ключ. точку если попстек переменная равна 0/false
fpush name var/int ...          : добовляет во временный стек значение. После jmp/jbp/jnb стек переносится в область функции

exc oper                        : выполнение булевой операции и пуш результата в стек (a > b, a < b, ...)
exc oper &                      : exc + при верном равенстве, выполняется следующая строчка, иначе пропускается

sum avar bvar/int               : пуш суммы переменных a и b/числа
sub avar bvar/int               : пуш разности переменных a и b/числа
div avar bvar/int               : пуш частного переменных a и b/числа
mlt avar bvar/int               : пуш произведения переменных a и b/числа
pwr avar bvar/int               : пуш a в степени b/числа

inc var ...                     : инкрементация переменной (+1)
dcr var ...                     : дикрементация переменной (-1)

psh var/int                     : пуш значения переменной / числа
pop (var)                       : поп из стека, или поп в переменную
pek var                         : пик значения в переменную

brk                             : выход из блока кода
ret var                         : brk + push 

gip vara varb ...               : копирование данных из глобального стека в переменную
got vara varb ...               : копирование данных в глобальный стек из переменной

inp var ...                     : ввод данных в переменную через консоль
out var ...                     : вывод данных переменной через консоль

@                               : комментарий, ставится в начале строки
check                           : вывод дебаг данных (стек и переменные)

Структура кода:

.main:
    @ Код
;

Это блок кода, начинается на .name: и заканчивается ;
Перейти на блок кода можно командами jmp/jbp/jnb
Блок кода main должен быть всегда, при запуске программы именно он
воспроизводится первым.

Реализация функций:

Как было            | Как стало
.sumfunc:           | .sumfunc:
    reg a           |     tmp a b
    reg b           |     sum a b
    reg c           |     ret $pop
    pop a           | ;
    pop b           |
    sum a b         | 
    pop c           |
    ret c           |
;                   | 

.main:              | .main:
	reg a           |   reg a b
	reg b           |   inp a b
	inp a           |   fpush sumfunc a b
    inp b           |   jmp sumfunc
	fpush sumfunc a |   tmp vout
	fpush sumfunc b |   out vout
	jmp sumfunc     | ;  
	reg temp        |   
	pop temp        |   
	out temp        |   
;                   | 